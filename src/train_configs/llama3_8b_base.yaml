# This config assumes that you've run the following command before launching this run:
#   tune download meta-llama/Meta-Llama-3-8B --output-dir ./base_models/Meta-Llama-3-8B --ignore-patterns "original/consolidated.00.pth"
# if you do not have hf_token saved in your bash configuration files, also append
#   --hf-token <HF_TOKEN>

# Tokenizer
tokenizer:
  _component_: torchtune.models.llama3.llama3_tokenizer
  path: ./base_models/Meta-Llama-3-8B/tokenizer.model

# Dataset
dataset:
  _component_: torchtune.datasets.instruct_dataset
  source: json
  template: torchtune.data.AlpacaInstructTemplate
  max_seq_len: 1024
  train_on_input: False
  split: train
  data_files: ""
seed: 42
shuffle: True

# Model Arguments
model:
  _component_: torchtune.models.llama3.llama3_8b

checkpointer:
  _component_: torchtune.utils.FullModelHFCheckpointer
  checkpoint_dir: ./base_models/Meta-Llama-3-8B
  checkpoint_files: [
    model-00001-of-00004.safetensors,
    model-00002-of-00004.safetensors,
    model-00003-of-00004.safetensors,
    model-00004-of-00004.safetensors
  ]
  recipe_checkpoint: null
  output_dir: ""
  model_type: LLAMA3
resume_from_checkpoint: False

# Fine-tuning arguments
batch_size: 2
epochs: 3
optimizer:
  _component_: torch.optim.AdamW
  lr: 5e-6
warmup_ratio: 3e-2
loss:
  _component_: torch.nn.CrossEntropyLoss
max_steps_per_epoch: null
gradient_accumulation_steps: 1

# Training env
device: cuda

# Memory management
enable_activation_checkpointing: True
memory_efficient_fsdp_wrap: False

# Reduced precision
dtype: bf16

# Logging
metric_logger:
  _component_: torchtune.utils.metric_logging.DiskLogger
  log_dir: ${output_dir}
output_dir: ./logs/Meta-Llama-3-8B
log_every_n_steps: 1
log_peak_memory_stats: False